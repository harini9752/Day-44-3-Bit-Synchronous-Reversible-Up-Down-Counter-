module tb_three_bit_reversible_up_down_counter;

  reg clk, rst_n, up_down;
  wire [2:0] count;

  three_bit_reversible_up_down_counter uut (
    .clk(clk),
    .rst_n(rst_n),
    .up_down(up_down),
    .count(count)
  );

  initial begin
    // Test 1: Counter without reset, counting up
    clk = 0;
    rst_n = 1;
    up_down = 1;
    #10 $display("Time=%0t clk=%b rst_n=%b up_down=%b count=%b", $time, clk, rst_n, up_down, count);

    // Test 2: Counter with reset
    rst_n = 0;
    #10 $display("Time=%0t clk=%b rst_n=%b up_down=%b count=%b", $time, clk, rst_n, up_down, count);

    // Test 3: Counter after reset, counting down
    rst_n = 1;
    up_down = 0;
    #10 $display("Time=%0t clk=%b rst_n=%b up_down=%b count=%b", $time, clk, rst_n, up_down, count);

    // Add more test cases as needed

    $finish;
  end

  always #5 clk = ~clk;

endmodule

